var documenterSearchIndex = {"docs":
[{"location":"#Spglib.jl","page":"Home","title":"Spglib.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Spglib]","category":"page"},{"location":"#Spglib.find_primitive","page":"Home","title":"Spglib.find_primitive","text":"find_primitive(cell::Cell, symprec = 1e-5)\n\nFind the primitive cell of an input unit cell.\n\nThis function is now a shortcut of standardize_cell with to_primitive = true and no_idealize = false.\n\n\n\n\n\n","category":"function"},{"location":"#Spglib.get_ir_reciprocal_mesh","page":"Home","title":"Spglib.get_ir_reciprocal_mesh","text":"get_ir_reciprocal_mesh(cell::Cell, mesh, is_shift = falses(3); is_time_reversal = true, symprec = 1e-5)\n\nReturn k-points mesh and k-point map to the irreducible k-points.\n\nIrreducible reciprocal grid points are searched from uniform mesh grid points specified by mesh and is_shift. mesh stores three integers. Reciprocal primitive vectors are divided by the number stored in mesh with (0,0,0) point centering. The centering can be shifted only half of one mesh by setting 1 or true for each is_shift element. If 0 or false is set for is_shift, it means there is no shift. This limitation of shifting enables the irreducible k-point search significantly faster when the mesh is very dense.\n\nThe reducible uniform grid points are returned in reduced coordinates as grid_address. A map between reducible and irreducible points are returned as grid_mapping_table as in the indices of grid_address. The number of the irreducible k-points are returned as the return value.  The time reversal symmetry is imposed by setting is_time_reversal.\n\n\n\n\n\n","category":"function"},{"location":"#Spglib.get_multiplicity","page":"Home","title":"Spglib.get_multiplicity","text":"get_multiplicity(cell::Cell, symprec = 1e-8)\n\nReturn the exact number of symmetry operations. An error is thrown when it fails.\n\n\n\n\n\n","category":"function"},{"location":"#Spglib.refine_cell","page":"Home","title":"Spglib.refine_cell","text":"refine_cell(cell::Cell, symprec = 1e-5)\n\nReturn refined cell.\n\nThe standardized crystal structure is obtained from a non-standard crystal structure which may be slightly distorted within a symmetry recognition tolerance, or whose primitive vectors are differently chosen, etc. This function is now a shortcut of standardize_cell with to_primitive = false and no_idealize = false.\n\n\n\n\n\n","category":"function"},{"location":"#Spglib.standardize_cell-Tuple{Cell}","page":"Home","title":"Spglib.standardize_cell","text":"standardize_cell(cell::Cell; to_primitive = false, no_idealize = false, symprec = 1e-5)\n\nReturn standardized cell.\n\nThe standardized unit cell is generated from an input unit cell structure and its symmetry found by the symmetry search. The choice of the setting for each space group type is as explained for get_dataset.\n\n\n\n\n\n","category":"method"}]
}
